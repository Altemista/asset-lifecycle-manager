on:
  push:
    tags:
      - '*'
name: Create new release from new TAG
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: release-${{ github.ref }}
          body: |
            ## Install
            ```shell
            curl -fsSL https://github.com/Altemista/asset-lifecycle-manager/releases/latest/download/install.sh | sh
            ```
          draft: true
          prerelease: false
      - name: Upload aalm-crds.yaml to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deploy/manifests/aalm-crds.yaml
          asset_name: aalm-crds.yaml
          asset_content_type: text/plain
      - name: Upload aalm.yaml to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deploy/manifests/aalm.yaml
          asset_name: aalm.yaml
          asset_content_type: text/plain

      - name: Upload kubeapps-apprepositories.yaml to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deploy/manifests/kubeapps-apprepositories.yaml
          asset_name: kubeapps-apprepositories.yaml
          asset_content_type: text/plain

      - name: Upload kubeapps-tests.yaml to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deploy/manifests/kubeapps-tests.yaml
          asset_name: kubeapps-tests.yaml
          asset_content_type: text/plain

      - name: Upload kubeapps-cleanup.yaml to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deploy/manifests/kubeapps-cleanup.yaml
          asset_name: kubeapps-cleanup.yaml
          asset_content_type: text/plain

      - name: Upload kubeapps.yaml to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deploy/manifests/kubeapps.yaml
          asset_name: kubeapps.yaml
          asset_content_type: text/plain

      - name: Upload harbor.yaml to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deploy/manifests/harbor.yaml
          asset_name: harbor.yaml
          asset_content_type: text/plain

      - name: Upload install.sh to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: install.sh
          asset_name: install.sh
          asset_content_type: text/plain
